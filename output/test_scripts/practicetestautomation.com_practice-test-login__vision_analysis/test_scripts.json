{
  "feature_file": "\nFeature: Test Login Functionality\n\n  Scenario: Verify Page Title\n    Given I navigate to the login page\n    Then the page title should be \"Test Login | Practice Test Automation\"\n\n  Scenario: Verify Username Input Field Acceptance\n    Given I navigate to the login page\n    When I leave the username input field empty\n    And I click the Submit button\n    Then I should see an error message\n\n  Scenario: Verify Valid Username Submission\n    Given I navigate to the login page\n    When I enter a valid username in the input field\n    And I click the Submit button\n    Then I should be redirected to the success page or see a success message\n\n  Scenario: Verify Log Out Button Functionality\n    Given I am logged in on the page\n    When I click the Log Out button\n    Then I should be redirected to the login page or see a logout confirmation message\n\n  Scenario: Check Navigation Links\n    Given I navigate to the login page\n    When I click on each navigation link\n    Then I should be redirected to the correct page\n\n  Scenario: Verify Toggle Navigation Button Functionality\n    Given I navigate to the login page\n    When I click the Toggle Navigation button\n    Then the navigation menu should toggle visibility",
  "step_definitions": "from behave import given, when, then\nfrom selenium import webdriver\n\n@given('I navigate to the login page')\ndef step_navigate_to_login(context):\n    context.browser = webdriver.Chrome()\n    context.browser.get('https://practicetestautomation.com/practice-test-login/')\n\n@then('the page title should be \"{expected_title}\"')\ndef step_check_page_title(context, expected_title):\n    assert context.browser.title == expected_title\n\n@when('I leave the username input field empty')\ndef step_empty_username_field(context):\n    username_field = context.browser.find_element_by_id('username')\n    username_field.clear()\n\n@when('I click the Submit button')\ndef step_click_submit_button(context):\n    submit_button = context.browser.find_element_by_id('submit')\n    submit_button.click()\n\n@then('I should see an error message')\ndef step_check_error_message(context):\n    error_message = context.browser.find_element_by_css_selector('.error-message')\n    assert error_message.is_displayed()\n\n@when('I enter a valid username in the input field')\ndef step_enter_valid_username(context):\n    username_field = context.browser.find_element_by_id('username')\n    username_field.send_keys('valid_username')\n\n@then('I should be redirected to the success page or see a success message')\ndef step_check_success_message(context):\n    assert 'success' in context.browser.page_source\n\n@when('I click the Log Out button')\ndef step_click_logout_button(context):\n    logout_button = context.browser.find_element_by_id('logout-button')\n    logout_button.click()\n\n@then('I should be redirected to the login page or see a logout confirmation message')\ndef step_check_logout_confirmation(context):\n    assert 'login' in context.browser.current_url\n\n@when('I click on each navigation link')\ndef step_click_navigation_links(context):\n    navigation_links = context.browser.find_elements_by_css_selector('.nav-link')\n    for link in navigation_links:\n        link.click()\n        assert context.browser.current_url == link.get_attribute('href')\n\n@when('I click the Toggle Navigation button')\ndef step_click_toggle_navigation(context):\n    toggle_button = context.browser.find_element_by_id('toggle-navigation')\n    toggle_button.click()\n\n@then('the navigation menu should toggle visibility')\ndef step_check_navigation_menu(context):\n    nav_menu = context.browser.find_element_by_id('nav-menu')\n    assert nav_menu.is_displayed()",
  "page_object": "class PracticeTestLoginPage:\n    def __init__(self, driver):\n        self.driver = driver\n        self.username_field = self.driver.find_element_by_id('username')\n        self.submit_button = self.driver.find_element_by_id('submit')\n        self.logout_button = self.driver.find_element_by_id('logout-button')\n        self.toggle_navigation_button = self.driver.find_element_by_id('toggle-navigation')\n\n    def enter_username(self, username):\n        self.username_field.clear()\n        self.username_field.send_keys(username)\n\n    def click_submit(self):\n        self.submit_button.click()\n\n    def click_logout(self):\n        self.logout_button.click()\n\n    def click_toggle_navigation(self):\n        self.toggle_navigation_button.click()\n\n    def is_error_message_displayed(self):\n        return self.driver.find_element_by_css_selector('.error-message').is_displayed()\n\n    def is_success_message_displayed(self):\n        return 'success' in self.driver.page_source\n\n    def get_current_url(self):\n        return self.driver.current_url",
  "url": "https://practicetestautomation.com/practice-test-login/",
  "title": "Test Login | Practice Test Automation",
  "language": "python3"
}