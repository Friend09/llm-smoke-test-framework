{
  "feature_file": "Feature: Smoke Test for Practice Test Login Page\n\n  Scenario: Validate elements and functionality on the login page\n    Given I open the page URL \"https://practicetestautomation.com/practice-test-login/\"\n    Then the page title should be \"Test Login | Practice Test Automation\"\n    And I should see the heading \"Test login\"\n    And the \"Submit\" button should be visible and enabled\n    And the \"Username\" input field should be present and enabled\n    And the \"Password\" input field should be present and enabled\n    And the \"Toggle navigation\" button should be present and enabled\n    When I click the \"Submit\" button without entering any credentials\n    Then I should see an error message indicating that credentials are required",
  "step_definitions": "import io.cucumber.java.en.Given;\nimport io.cucumber.java.en.Then;\nimport io.cucumber.java.en.When;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport static org.junit.Assert.*;\n\npublic class LoginPageSteps {\n    private WebDriver driver;\n    private LoginPage loginPage;\n\n    @Given(\"I open the page URL {string}\")\n    public void i_open_the_page_URL(String url) {\n        driver = new ChromeDriver();\n        driver.get(url);\n        loginPage = new LoginPage(driver);\n    }\n\n    @Then(\"the page title should be {string}\")\n    public void the_page_title_should_be(String title) {\n        assertEquals(title, driver.getTitle());\n    }\n\n    @Then(\"I should see the heading {string}\")\n    public void i_should_see_the_heading(String heading) {\n        assertTrue(loginPage.isHeadingVisible(heading));\n    }\n\n    @Then(\"the {string} button should be visible and enabled\")\n    public void the_button_should_be_visible_and_enabled(String button) {\n        assertTrue(loginPage.isButtonVisibleAndEnabled(button));\n    }\n\n    @Then(\"the {string} input field should be present and enabled\")\n    public void the_input_field_should_be_present_and_enabled(String field) {\n        assertTrue(loginPage.isInputFieldPresentAndEnabled(field));\n    }\n\n    @When(\"I click the {string} button without entering any credentials\")\n    public void i_click_the_button_without_entering_any_credentials(String button) {\n        loginPage.clickSubmitButton();\n    }\n\n    @Then(\"I should see an error message indicating that credentials are required\")\n    public void i_should_see_an_error_message() {\n        assertTrue(loginPage.isErrorMessageDisplayed());\n        driver.quit();\n    }\n}",
  "page_object": "import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\n\npublic class LoginPage {\n    private WebDriver driver;\n\n    public LoginPage(WebDriver driver) {\n        this.driver = driver;\n    }\n\n    public boolean isHeadingVisible(String heading) {\n        WebElement headingElement = driver.findElement(By.xpath(\"//h1[contains(text(), '\" + heading + \"')]\"));\n        return headingElement.isDisplayed();\n    }\n\n    public boolean isButtonVisibleAndEnabled(String button) {\n        WebElement buttonElement = driver.findElement(By.className(\"btn\"));\n        return buttonElement.isDisplayed() && buttonElement.isEnabled();\n    }\n\n    public boolean isInputFieldPresentAndEnabled(String field) {\n        WebElement inputField;\n        if (field.equals(\"Username\")) {\n            inputField = driver.findElement(By.id(\"username\"));\n        } else if (field.equals(\"Password\")) {\n            inputField = driver.findElement(By.id(\"password\"));\n        } else {\n            return false;\n        }\n        return inputField.isDisplayed() && inputField.isEnabled();\n    }\n\n    public void clickSubmitButton() {\n        WebElement submitButton = driver.findElement(By.className(\"btn\"));\n        submitButton.click();\n    }\n\n    public boolean isErrorMessageDisplayed() {\n        // Assuming an error message appears after clicking submit without credentials\n        WebElement errorMessage = driver.findElement(By.id(\"error-message\"));\n        return errorMessage.isDisplayed();\n    }\n}",
  "url": "https://practicetestautomation.com/practice-test-login/",
  "title": "Test Login | Practice Test Automation",
  "language": "Java"
}