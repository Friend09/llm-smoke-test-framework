package stepdefinitions;\n\nimport io.cucumber.java.en.Given;\nimport io.cucumber.java.en.Then;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.junit.Assert;\n\npublic class LoginPageSteps {\n    private WebDriver driver;\n    private LoginPage loginPage;\n\n    @Given("I navigate to the page URL \"{string}\"")\n    public void navigate_to_page(String url) {\n        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");\n        driver = new ChromeDriver();\n        driver.get(url);\n    }\n\n    @Then("I verify that the page title is \"{string}\"")\n    public void verify_page_title(String expectedTitle) {\n        String actualTitle = driver.getTitle();\n        Assert.assertEquals(expectedTitle, actualTitle);\n    }\n\n    @Then("I check for the presence of the heading \"{string}\"")\n    public void check_heading(String heading) {\n        WebElement headingElement = driver.findElement(By.xpath("//h1[contains(text(), '" + heading + "')]"));\n        Assert.assertTrue(headingElement.isDisplayed());\n    }\n\n    @Then("I verify that the username input field is displayed and enabled")\n    public void verify_username_field() {\n        WebElement usernameField = driver.findElement(By.id("username"));\n        Assert.assertTrue(usernameField.isDisplayed() && usernameField.isEnabled());\n    }\n\n    @Then("I verify that the password input field is displayed and enabled")\n    public void verify_password_field() {\n        WebElement passwordField = driver.findElement(By.id("password"));\n        Assert.assertTrue(passwordField.isDisplayed() && passwordField.isEnabled());\n    }\n\n    @Then("I check that the \"Submit\" button is visible and enabled")\n    public void verify_submit_button() {\n        WebElement submitButton = driver.findElement(By.className("btn"));\n        Assert.assertTrue(submitButton.isDisplayed() && submitButton.isEnabled());\n    }\n\n    @Then("I verify the presence of the \"toggle-navigation\" button")\n    public void verify_toggle_navigation() {\n        WebElement toggleButton = driver.findElement(By.id("toggle-navigation"));\n        Assert.assertTrue(toggleButton.isDisplayed());\n    }\n\n    @Then("I ensure that the \"HOME\" link is present and directs to the correct URL")\n    public void verify_home_link() {\n        WebElement homeLink = driver.findElement(By.cssSelector("a[href='https://practicetestautomation.com/']"));\n        Assert.assertTrue(homeLink.isDisplayed());\n        Assert.assertEquals("https://practicetestautomation.com/", homeLink.getAttribute("href"));\n    }\n\n    @Then("I optionally test the \"Submit\" button to ensure it responds appropriately when clicked")\n    public void test_submit_button() {\n        WebElement submitButton = driver.findElement(By.className("btn"));\n        submitButton.click();\n        // Here you would add assertions to verify the outcome after clicking submit\n    }\n\n    // Cleanup method to close the browser after tests\n    public void tearDown() {\n        if (driver != null) {\n            driver.quit();\n        }\n    }\n}